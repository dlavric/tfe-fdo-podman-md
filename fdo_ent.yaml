#cloud-config
write_files:
  - content: |
      apiVersion: "v1"
      kind: "Pod"
      metadata:
        labels:
          app: "terraform-enterprise"
        name: "terraform-enterprise"
      spec:
          restartPolicy: "Never"
          containers:
          - env:
            - name: "TFE_OPERATIONAL_MODE"
              value: "disk"
            - name: "TFE_LICENSE"
              value: "${license_value}"
            - name: "TFE_HOSTNAME"
              value: "${tfe_hostname}"
            - name: "TFE_HTTP_PORT"
              value: "8080"
            - name: "TFE_HTTPS_PORT"
              value: "8443"
            - name: "TFE_TLS_CERT_FILE"
              value: "/etc/ssl/private/terraform-enterprise/cert.pem"
            - name: "TFE_TLS_KEY_FILE"
              value: "/etc/ssl/private/terraform-enterprise/key.pem"
            - name: "TFE_TLS_CA_BUNDLE_FILE"
              value: "/etc/ssl/private/terraform-enterprise/bundle.pem"
            - name: "TFE_DISK_CACHE_VOLUME_NAME"
              value: "terraform-enterprise_terraform-enterprise-cache"
            - name: "TFE_LICENSE_REPORTING_OPT_OUT"
              value: "true"
            - name: "TFE_ENCRYPTION_PASSWORD"
              value: "${enc_password}"
            image: "images.releases.hashicorp.com/hashicorp/terraform-enterprise:${tfe_version}"
            name: "terraform-enterprise"
            ports:
            - containerPort: 8080
              hostPort: 80
            - containerPort: 8443
              hostPort: 443
            - containerPort: 9090
              hostPort: 9090
            securityContext:
              capabilities:
                add:
                - "CAP_IPC_LOCK"
              readOnlyRootFilesystem: true
              seLinuxOptions:
                type: "spc_t"
            volumeMounts:
            - mountPath: "/etc/ssl/private/terraform-enterprise"
              name: "certs"
            - mountPath: "/var/log/terraform-enterprise"
              name: "log"
            - mountPath: "/run"
              name: "run"
            - mountPath: "/tmp"
              name: "tmp"
            - mountPath: "/var/lib/terraform-enterprise"
              name: "data"
            - mountPath: "/run/docker.sock"
              name: "docker-sock"
            - mountPath: "/var/cache/tfe-task-worker/terraform"
              name: "terraform-enterprise_terraform-enterprise-cache-pvc"
          volumes:
          - hostPath:
              path: "/opt/tfe-fdo/certs"
              type: "Directory"
            name: "certs"
          - emptyDir:
              medium: "Memory"
            name: "log"
          - emptyDir:
              medium: "Memory"
            name: "run"
          - emptyDir:
              medium: "Memory"
            name: "tmp"
          - hostPath:
              path: "/opt/tfe-fdo/data"
              type: "Directory"
            name: "data"
          - hostPath:
              path: "/var/run/docker.sock"
              type: "File"
            name: "docker-sock"
          - name: "terraform-enterprise_terraform-enterprise-cache-pvc"
            persistentVolumeClaim:
              claimName: "terraform-enterprise_terraform-enterprise-cache"
    permissions: '0640'
    path: /var/tmp/compose.yaml
  - content: |
       until ping -c1 archive.ubuntu.com &>/dev/null; do echo "waiting to install packages" ; sleep 3 ; done 

       #install Podman
       dnf module install -y container-tools
       dnf install -y podman-docker

       #enable Podman socket
       systemctl enable --now podman.socket

       #install packages
       dnf install -y install ca-certificates curl gnupg

       # enable epel
       subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms
       dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
       dnf install -y htop # for monitoring
    permissions: '0750'
    path: /var/tmp/install-podman.sh
  - content: |
       until ping -c1 archive.ubuntu.com &>/dev/null; do echo "waiting for internet.." ; sleep 3 ; done 

       #create a new directory dedicated to tfe and to add the certs
       mkdir -p /opt/tfe-fdo/certs

       #create a directory to store the data
       mkdir -p /opt/tfe-fdo/data

       #install awscli to get the certs from S3 bucket
       cd /var/tmp/
       curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
       unzip awscliv2.zip
       ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

       #copy the certs from S3 locally, to my tfe-fdo/certs folder
       /usr/local/bin/aws s3 cp s3://${bucket}/ssl-certs/full_chain /opt/tfe-fdo/certs/cert.pem
       /usr/local/bin/aws s3 cp s3://${bucket}/ssl-certs/full_chain /opt/tfe-fdo/certs/bundle.pem
       /usr/local/bin/aws s3 cp s3://${bucket}/ssl-certs/private_key_pem /opt/tfe-fdo/certs/key.pem

       #login to the Terraform Enterprise container image registry
       echo ${license_value} |  podman login --username terraform images.releases.hashicorp.com --password-stdin

       #pull the TFE image from the registry
       podman pull images.releases.hashicorp.com/hashicorp/terraform-enterprise:${tfe_version}

       #copy compose file
       cp /var/tmp/compose.yaml /opt/tfe-fdo
 
       #spin up TFE
       pushd /opt/tfe-fdo

       #create a Terraform Enterprise pod
       escaped=$(systemd-escape -p /opt/tfe-fdo/compose.yaml)
       systemctl start podman-kube@$escaped.service


    permissions: '0750'
    path: /var/tmp/install-tfe.sh
  - content: |
      {
        "username": "${username}",
        "email": "${email}",
        "password": "${password}"
      }
    permissions: '0750'
    path: /opt/tfe-fdo/payload-iact.json
  - content: |
      #!/bin/bash
      #We have to wait for TFE be fully functioning before we can continue
      while true; do
          if curl -kI "https://${tfe_hostname}/admin" 2>&1 | grep -w "200\|301" ;
          then
              echo "TFE is up and running"
              echo "Will continue in 1 minutes with the final steps"
              sleep 60
              break
          else
              echo "TFE is not available yet. Please wait..."
              sleep 60
          fi
      done

      #go to the tfe folder
      pushd /opt/tfe-fdo

      #get iact token
      IACT_TOKEN_TEMP=`podman exec -it terraform-enterprise-terraform-enterprise tfectl admin token | tee /opt/tfe-fdo/iact-token.txt`

      IACT_TOKEN=`echo $IACT_TOKEN_TEMP | sed 's/[^A-Za-z0-9]//g' |  sed 's/^1m//;s/0m$//'`  

      #create the first admin user
      curl -k \
          --header "Content-Type: application/json" \
          --request POST \
          --data @/opt/tfe-fdo/payload-iact.json \
          https://${tfe_hostname}/admin/initial-admin-user?token=$IACT_TOKEN | tee /opt/tfe-fdo/initial-admin-user.json
    permissions: '0750'
    path: /var/tmp/create-admin-user.sh   
runcmd:
  - sudo bash /var/tmp/install-podman.sh
  - sudo bash /var/tmp/install-tfe.sh
  - sudo bash /var/tmp/create-admin-user.sh
packages_update: true
packages:
  - unzip